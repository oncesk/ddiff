<?php

namespace DDiff\Application;

use Symfony\Component\Console\Application as SymfonyCliApplication;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Class Application
 * @package DDiff\Application
 */
class Application extends SymfonyCliApplication
{
    /**
     * @var ContainerInterface
     */
    protected $container;

    /**
     * @param ContainerInterface $container
     */
    public function setContainer(ContainerInterface $container)
    {
        $this->container = $container;
    }

    /**
     * @return ContainerInterface
     */
    public function getContainer()
    {
        return $this->container;
    }

    /**
     * @param array $commands
     */
    public function addCommands(array $commands)
    {
        foreach ($commands as $command) {
            if ($command instanceof ContainerAwareInterface) {
                $command->setContainer($this->getContainer());
            }
        }
        parent::addCommands($commands); // TODO: Change the autogenerated stub
    }

    /**
     * @param Command $command
     * @return Command
     */
    public function add(Command $command)
    {
        if ($command instanceof ContainerAwareInterface) {
            $command->setContainer($this->getContainer());
        }
        return parent::add($command); // TODO: Change the autogenerated stub
    }
}
